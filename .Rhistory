list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
countNA <- function(x) {
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i) }
countX <- function(x,X) {
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i) }
# Chunk 4
df$model<-factor(paste0(df$manufacturer,"-",df$model))
df$model<-factor(df$model,labels=paste0("f.Model",levels(df$model)))
summary(df$model)
barplot(summary(df$model), main = "Model Barplot", col = "blue")
# Chunk 5
df$years_sell <-  2022 - df$year ####AQUI????????????????????????????????????????????????????????????????????????????????????
df$year <- factor(df$year)
df$year <- factor(df$year, labels = paste0("f.Year-",levels(df$year)))
summary(df$year)
barplot(summary(df$year), main = "Year Barplot", col = "blue")
# Chunk 6
df$transmission<-factor(df$transmission)
df$transmission <- factor(df$transmission, levels = c("Manual","Semi-Auto","Automatic"),labels = paste0("f.Trans-",c("Manual","SemiAuto","Automatic")))
summary(df$transmission)
barplot(summary(df$transmission), main = "Transmission Barplot", col = "blue")
# Chunk 7
df$fuelType<-factor(df$fuelType)
df$fuelType <- factor(df$fuelType, labels = paste0("f.Fuel-",levels(df$fuelType)))
summary(df$fuelType)
barplot(summary(df$fuelType), main = "FuelType Barplot", col = "blue")
# Chunk 8
df$engineSize<-factor(df$engineSize)
df$engineSize <- factor(df$engineSize, labels = paste0("f.EngSize-",levels(df$engineSize)))
summary(df$engineSize)
barplot(summary(df$engineSize), main = "EngineSize Barplot", col = "blue")
# Chunk 9
df$manufacturer<-factor(df$manufacturer)
df$manufacturer <- factor(df$manufacturer, labels = paste0("f.Mfr-",levels(df$manufacturer)))
summary(df$manufacturer)
barplot(summary(df$manufacturer), main = "Manufacturer Barplot", col = "blue")
# Chunk 10
summary(df$price)
Boxplot(df$price)
boxplot(df$price)
df$f.price<-factor(cut(df$price/1000,breaks=c(quantile(df$price,seq(0,1,0.25),na.rm=TRUE))/1000,include.lowest = T ))
summary(df$f.price)####))/1000
levels(df$f.price)<-paste("f.price-",levels(df$f.price))
table(df$f.price,useNA="always")
# Chunk 11
summary(df$mileage)
Boxplot(df$mileage)
boxplot(df$mileage)
df$f.mileage<-factor(cut(df$mileage/1000,breaks=c(quantile(df$mileage,seq(0,1,0.25),na.rm=TRUE))/1000,include.lowest = T ))
summary(df$f.mileage)
levels(df$f.mileage)<-paste("f.mileage-",levels(df$f.mileage))
table(df$f.mileage,useNA="always")
# Chunk 12
summary(df$tax)
Boxplot(df$tax)
boxplot(df$tax)
df$f.tax<-factor(cut(df$tax,breaks=c(0,125,145,155,580),include.lowest = T ))
summary(df$f.tax)
levels(df$f.tax)<-paste("f.tax-",levels(df$f.tax))
table(df$f.tax,useNA="always")
# Chunk 13
summary(df$mpg)
Boxplot(df$mpg)
boxplot(df$mpg)
df$f.mpg<-factor(cut(df$mpg,breaks=c(quantile(df$mpg,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
summary(df$f.mpg)
levels(df$f.mpg)<-paste("f.mpg-",levels(df$f.mpg))
table(df$f.mpg,useNA="always")
# Chunk 14
summary(df$years_sell)
Boxplot(df$years_sell)
boxplot(df$years_sell)
df$f.years_sell<-factor(cut(df$years_sell,breaks=c(quantile(df$years_sell,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
summary(df$f.years_sell)
levels(df$f.years_sell)<-paste("f.years_sell-",levels(df$f.years_sell))
table(df$f.years_sell,useNA="always")
# Chunk 15
#######################################################
imis<-rep(0,nrow(df))  # rows - cars
jmis<-rep(0,ncol(df))  # columns - variables
######################################################
mis1<-countNA(df) #There are no missings at the beginning
mis1$mis_ind # Number of missings for the current set of cars
mis1$mis_col # Number of missings for the current set of variables
sum(mis1$mis_ind)
sum(mis1$mis_col)
#######################################################
iouts<-rep(0,nrow(df))  # rows - cars
jouts<-rep(0,ncol(df))  # columns - variables
######################################################
#######################################################
ierrs<-rep(0,nrow(df))  # rows - cars
jerrs<-rep(0,ncol(df))  # columns - variables
######################################################
#sobra 2 diu profe
# Chunk 1
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("effects","FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
# Chunk 2
# Clear plots
if(!is.null(dev.list())) dev.off()
# Clean workspace
rm(list=ls())
setwd("C:/Users/Miquel/Documents/GitHub/ADEI")
filepath<-"C:/Users/Miquel/Documents/GitHub/ADEI/"
load(paste0(filepath,"MyOldCars-Raw.RData"))
# Chunk 3
# Mout <- which((df$tax < var_out$mouti)|(df$tax > var_out$mouts))
# Some useful functions
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
countNA <- function(x) {
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i) }
countX <- function(x,X) {
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i) }
# Chunk 4
df$model<-factor(paste0(df$manufacturer,"-",df$model))
df$model<-factor(df$model,labels=paste0("f.Model",levels(df$model)))
summary(df$model)
barplot(summary(df$model), main = "Model Barplot", col = "blue")
# Chunk 5
df$years_sell <-  2022 - df$year ####AQUI????????????????????????????????????????????????????????????????????????????????????
df$year <- factor(df$year)
df$year <- factor(df$year, labels = paste0("f.Year-",levels(df$year)))
summary(df$year)
barplot(summary(df$year), main = "Year Barplot", col = "blue")
# Chunk 6
df$transmission<-factor(df$transmission)
df$transmission <- factor(df$transmission, levels = c("Manual","Semi-Auto","Automatic"),labels = paste0("f.Trans-",c("Manual","SemiAuto","Automatic")))
summary(df$transmission)
barplot(summary(df$transmission), main = "Transmission Barplot", col = "blue")
# Chunk 7
df$fuelType<-factor(df$fuelType)
df$fuelType <- factor(df$fuelType, labels = paste0("f.Fuel-",levels(df$fuelType)))
summary(df$fuelType)
barplot(summary(df$fuelType), main = "FuelType Barplot", col = "blue")
# Chunk 8
df$engineSize<-factor(df$engineSize)
df$engineSize <- factor(df$engineSize, labels = paste0("f.EngSize-",levels(df$engineSize)))
summary(df$engineSize)
barplot(summary(df$engineSize), main = "EngineSize Barplot", col = "blue")
# Chunk 9
df$manufacturer<-factor(df$manufacturer)
df$manufacturer <- factor(df$manufacturer, labels = paste0("f.Mfr-",levels(df$manufacturer)))
summary(df$manufacturer)
barplot(summary(df$manufacturer), main = "Manufacturer Barplot", col = "blue")
# Chunk 10
summary(df$price)
Boxplot(df$price)
boxplot(df$price)
df$f.price<-factor(cut(df$price/1000,breaks=c(quantile(df$price,seq(0,1,0.25),na.rm=TRUE))/1000,include.lowest = T ))
summary(df$f.price)####))/1000
levels(df$f.price)<-paste("f.price-",levels(df$f.price))
table(df$f.price,useNA="always")
# Chunk 11
summary(df$mileage)
Boxplot(df$mileage)
boxplot(df$mileage)
df$f.mileage<-factor(cut(df$mileage/1000,breaks=c(quantile(df$mileage,seq(0,1,0.25),na.rm=TRUE))/1000,include.lowest = T ))
summary(df$f.mileage)
levels(df$f.mileage)<-paste("f.mileage-",levels(df$f.mileage))
table(df$f.mileage,useNA="always")
# Chunk 12
summary(df$tax)
Boxplot(df$tax)
boxplot(df$tax)
df$f.tax<-factor(cut(df$tax,breaks=c(0,125,145,155,580),include.lowest = T ))
summary(df$f.tax)
levels(df$f.tax)<-paste("f.tax-",levels(df$f.tax))
table(df$f.tax,useNA="always")
# Chunk 13
summary(df$mpg)
Boxplot(df$mpg)
boxplot(df$mpg)
df$f.mpg<-factor(cut(df$mpg,breaks=c(quantile(df$mpg,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
summary(df$f.mpg)
levels(df$f.mpg)<-paste("f.mpg-",levels(df$f.mpg))
table(df$f.mpg,useNA="always")
# Clean workspace
rm(list=ls())
# Load Required Packages: to be increased over the course
options(contrasts=c("contr.treatment","contr.treatment"))
requiredPackages <- c("effects","FactoMineR","car", "factoextra","RColorBrewer","ggplot2","dplyr","ggmap","ggthemes","knitr")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(requiredPackages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
setwd("C:/Users/Miquel/Documents/GitHub/ADEI")
filepath<-"C:/Users/Miquel/Documents/GitHub/ADEI/"
load(paste0(filepath,"MyOldCars-Raw.RData"))
# Mout <- which((df$tax < var_out$mouti)|(df$tax > var_out$mouts))
# Some useful functions
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
countNA <- function(x) {
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i) }
countX <- function(x,X) {
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i) }
df$model<-factor(paste0(df$manufacturer,"-",df$model))
df$model<-factor(df$model,labels=paste0("f.Model",levels(df$model)))
summary(df$model)
barplot(summary(df$model), main = "Model Barplot", col = "blue")
df$years_sell <-  2022 - df$year ####AQUI????????????????????????????????????????????????????????????????????????????????????
df$year <- factor(df$year)
df$year <- factor(df$year, labels = paste0("f.Year-",levels(df$year)))
summary(df$year)
barplot(summary(df$year), main = "Year Barplot", col = "blue")
df$transmission<-factor(df$transmission)
df$transmission <- factor(df$transmission, levels = c("Manual","Semi-Auto","Automatic"),labels = paste0("f.Trans-",c("Manual","SemiAuto","Automatic")))
summary(df$transmission)
barplot(summary(df$transmission), main = "Transmission Barplot", col = "blue")
df$fuelType<-factor(df$fuelType)
df$fuelType <- factor(df$fuelType, labels = paste0("f.Fuel-",levels(df$fuelType)))
summary(df$fuelType)
barplot(summary(df$fuelType), main = "FuelType Barplot", col = "blue")
df$engineSize<-factor(df$engineSize)
df$engineSize <- factor(df$engineSize, labels = paste0("f.EngSize-",levels(df$engineSize)))
summary(df$engineSize)
barplot(summary(df$engineSize), main = "EngineSize Barplot", col = "blue")
df$manufacturer<-factor(df$manufacturer)
df$manufacturer <- factor(df$manufacturer, labels = paste0("f.Mfr-",levels(df$manufacturer)))
summary(df$manufacturer)
barplot(summary(df$manufacturer), main = "Manufacturer Barplot", col = "blue")
summary(df$price)
Boxplot(df$price)
boxplot(df$price)
df$f.price<-factor(cut(df$price/1000,breaks=c(quantile(df$price,seq(0,1,0.25),na.rm=TRUE))/1000,include.lowest = T ))
summary(df$f.price)####))/1000
levels(df$f.price)<-paste("f.price-",levels(df$f.price))
table(df$f.price,useNA="always")
summary(df$mileage)
Boxplot(df$mileage)
boxplot(df$mileage)
df$f.mileage<-factor(cut(df$mileage/1000,breaks=c(quantile(df$mileage,seq(0,1,0.25),na.rm=TRUE))/1000,include.lowest = T ))
summary(df$f.mileage)
levels(df$f.mileage)<-paste("f.mileage-",levels(df$f.mileage))
table(df$f.mileage,useNA="always")
summary(df$tax)
Boxplot(df$tax)
boxplot(df$tax)
df$f.tax<-factor(cut(df$tax,breaks=c(0,125,145,155,580),include.lowest = T ))
summary(df$f.tax)
levels(df$f.tax)<-paste("f.tax-",levels(df$f.tax))
table(df$f.tax,useNA="always")
summary(df$mpg)
Boxplot(df$mpg)
boxplot(df$mpg)
df$f.mpg<-factor(cut(df$mpg,breaks=c(quantile(df$mpg,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
summary(df$f.mpg)
levels(df$f.mpg)<-paste("f.mpg-",levels(df$f.mpg))
table(df$f.mpg,useNA="always")
summary(df$years_sell)
Boxplot(df$years_sell)
boxplot(df$years_sell)
df$f.years_sell<-factor(cut(df$years_sell,breaks=c(quantile(df$years_sell,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
summary(df$f.years_sell)
levels(df$f.years_sell)<-paste("f.years_sell-",levels(df$f.years_sell))
table(df$f.years_sell,useNA="always")
#######################################################
imis<-rep(0,nrow(df))  # rows - cars
jmis<-rep(0,ncol(df))  # columns - variables
######################################################
mis1<-countNA(df) #There are no missings at the beginning
mis1$mis_ind # Number of missings for the current set of cars
mis1$mis_col # Number of missings for the current set of variables
sum(mis1$mis_ind)
sum(mis1$mis_col)
#######################################################
iouts<-rep(0,nrow(df))  # rows - cars
jouts<-rep(0,ncol(df))  # columns - variables
######################################################
#######################################################
ierrs<-rep(0,nrow(df))  # rows - cars
jerrs<-rep(0,ncol(df))  # columns - variables
######################################################
#sobra 2 diu profe
mis1<-countNA(df)
mis1$mis_ind
mis1$mis_col
summary(mis1$mis_ind)
summary(mis1$mis_col)
sel<-which(df$engineSize==0 & df$fuelType!="f.Fuel-Electric")
ierrs[sel]<-ierrs[sel]+1
jerrs[9] <- length(sel)
Boxplot(df$price)
var_out<-calcQ(df$price)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
# Outliers:
llout_price<-which((df$price<var_out$souti)|(df$price>var_out$souts))#souts abline
iouts[llout_price]<-iouts[llout_price]+1
jouts[3]<-length(llout_price)
Boxplot(df$mileage)
var_out<-calcQ(df$mileage)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
# Outliers:
llout_mileage<-which((df$mileage<var_out$souti)|(df$mileage>var_out$souts))#souts abline
iouts[llout_mileage]<-iouts[llout_mileage]+1
jouts[5]<-length(llout_mileage)
# Assignation of an NA to my response variable:
df[llout_mileage,"mileage"]<-NA #llout
Boxplot(df$tax)
var_out<-calcQ(df$tax)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
# Outliers:
llout_tax<-which((df$tax<var_out$souti)|(df$tax>var_out$souts))#souts abline
iouts[llout_tax]<-iouts[llout_tax]+1
jouts[7]<-length(llout_tax)
# Assignation of an NA to my response variable:
df[llout_tax,"tax"]<-NA #llout
Boxplot(df$mpg)
var_out<-calcQ(df$mpg)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
# Outliers:
llout_mpg<-which((df$mpg<var_out$souti)|(df$mpg>var_out$souts))#souts abline
iouts[llout_mpg]<-iouts[llout_mpg]+1
jouts[8]<-length(llout_mpg)
# Assignation of an NA to my response variable:
df[llout_mpg,"mpg"]<-NA #llout
Boxplot(df$years_sell)
var_out<-calcQ(df$years_sell)
abline(h=var_out$souts,col="red")
abline(h=var_out$souti,col="red")
# Outliers:
llout_years_sell<-which((df$years_sell<var_out$souti)|(df$years_sell>var_out$souts))#souts abline
iouts[llout_years_sell]<-iouts[llout_years_sell]+1
jouts[11]<-length(llout_years_sell)
# Assignation of an NA to my response variable:
df[llout_years_sell,"years_sell"]<-NA #llout
missings_ranking_sortlist <- sort.list(mis1$mis_col, decreasing = TRUE)
for(j in missings_ranking_sortlist) {
print(paste(names(df)[j]," : ", mis1$mis_col$mis_x[j]))
}
errors_ranking_sortlist <- sort.list(jerrs, decreasing = TRUE)
for(j in errors_ranking_sortlist) {
if(!is.na(names(df)[j])) { print(paste(names(df)[j], " : ", jerrs[j])) }
}
outliers_ranking_sortlist <- sort.list(jouts, decreasing = TRUE)
for(j in outliers_ranking_sortlist) {
if(!is.na(names(df)[j])) print(paste(names(df)[j], " : ", jouts[j]))
}
barplot(table(imis),main = "Missings per individual Barplot", col = "blue")
barplot(table(ierrs), main = "Errors per individual Barplot", col = "blue")
barplot(table(iouts), main = "Outliers per individual Barplot", col = "blue")
library(mvoutlier)
names(df)
vout<-aq.plot(df[,c(3,5,8, 11)], delta=qchisq(0.95,3),alpha=0.05)#LA 7 DIU Q TE POCA VARIANÇAAAAAAAA
summary(df)
library(chemometrics)
dis <- Moutlier(df[,c(3,5,8, 11)], quantile = 0.995)
dis$cutoff
sqrt(qchisq(0.995,3))
str(dis)
par(mfrow=c(1,1))
plot(dis$md,dis$rd, type="n")
text(dis$md,dis$rd,labels=rownames(df[,c(3,5,8, 11)]))
abline(h=dis$cutoff,col="red",lwd=2)
abline(v=dis$cutoff,col="red",lwd=2)
abline(h=dis$cutof^2,col="red",lwd=2,lty=2)
abline(v=dis$cutoff^2,col="red",lwd=2,lty=2)
library(mvoutlier)
names(df)
vout<-aq.plot(df[,c(3,5,8, 11)], delta=qchisq(0.95,3),alpha=0.05)#LA 7 DIU Q TE POCA VARIANÇAAAAAAAA
summary(df)
library(chemometrics)
dis <- Moutlier(df[,c(3,5,8, 11)], quantile = 0.995)
dis$cutoff
sqrt(qchisq(0.995,4))
str(dis)
par(mfrow=c(1,1))
plot(dis$md,dis$rd, type="n")
text(dis$md,dis$rd,labels=rownames(df[,c(3,5,8, 11)]))
abline(h=dis$cutoff,col="red",lwd=2)
abline(v=dis$cutoff,col="red",lwd=2)
abline(h=dis$cutof^2,col="red",lwd=2,lty=2)
abline(v=dis$cutoff^2,col="red",lwd=2,lty=2)
library(mvoutlier)
names(df)
vout<-aq.plot(df[,c(3,5,8, 11)], delta=qchisq(0.95,4),alpha=0.05)#LA 7 DIU Q TE POCA VARIANÇAAAAAAAA
summary(df)
library(chemometrics)
dis <- Moutlier(df[,c(3,5,8, 11)], quantile = 0.995)
dis$cutoff
sqrt(qchisq(0.995,4))
str(dis)
par(mfrow=c(1,1))
plot(dis$md,dis$rd, type="n")
text(dis$md,dis$rd,labels=rownames(df[,c(3,5,8, 11)]))
abline(h=dis$cutoff,col="red",lwd=2)
abline(v=dis$cutoff,col="red",lwd=2)
abline(h=dis$cutof^2,col="red",lwd=2,lty=2)
abline(v=dis$cutoff^2,col="red",lwd=2,lty=2)
library(mvoutlier)
names(df)
vout<-aq.plot(df[,c(3,5,8, 11)], delta=qchisq(0.95,4),alpha=0.05)#LA 7 DIU Q TE POCA VARIANÇAAAAAAAA
summary(df)
library(chemometrics)
dis <- Moutlier(df[,c(3,5,8, 11)], quantile = 0.995)
dis$cutoff
sqrt(qchisq(0.995,4))
str(dis)
par(mfrow=c(1,1))
plot(dis$md,dis$rd, type="n")
text(dis$md,dis$rd,labels=rownames(df[,c(3,5,8, 11)]))
abline(h=dis$cutoff,col="red",lwd=2)
abline(v=dis$cutoff,col="red",lwd=2)
abline(h=dis$cutof^2,col="red",lwd=2,lty=2)
abline(v=dis$cutoff^2,col="red",lwd=2,lty=2)
library(mvoutlier)
names(df)
vout<-aq.plot(df[,c(3,5,8, 11)], delta=qchisq(0.95,4),alpha=0.05)#LA 7 DIU Q TE POCA VARIANÇAAAAAAAA
library(mvoutlier)
names(df)
vars_con<-names(df)[c(3,5,7,8, 11)]
vout<-aq.plot(df[,vars_con], delta=qchisq(0.95,5),alpha=0.05)
library(mvoutlier)
names(df)
vars_con<-names(df)[c(3,5,8, 11)]
vout<-aq.plot(df[,vars_con], delta=qchisq(0.95,4),alpha=0.05)
vars_con<-names(df)[c(3,5,8, 11)]
vout<-aq.plot(df[,vars_con], delta=qchisq(0.95,4),alpha=0.05)
vout<-aq.plot(df[,c(3,5,8, 11)], delta=qchisq(0.95,4),alpha=0.05)#LA 7 DIU Q TE POCA VARIANÇAAAAAAAA Might not work
vars_con<-names(df)[c(3,5,7,8, 11)]
vout<-aq.plot(df[,vars_con], delta=qchisq(0.95,5),alpha=0.05)
vars_con<-names(df)[c(3,5,8, 11)]
vout<-aq.plot(df[,vars_con], delta=qchisq(0.95,5),alpha=0.05)
library(chemometrics)
dis <- Moutlier(df[,c(3,5,8, 11)], quantile = 0.995)
library(mvoutlier)
vars_con<-names(df)[c(5,7,8, 11)]
vars_con<-names(df)[c(3,5,7,8, 11)]
mout<-aq.plot(df[,vars_con],delta=qchisq(0.995,5),quan=0.995)
vars_con<-names(df)[c(3,5,7,8, 11)]
mout<-aq.plot(df[,vars_con],delta=qchisq(0.995,5),quan=0.995)
library(chemometrics)
mout<-Moutlier(df[,c(3,5,8,11)],quantile = 0.995, plot = TRUE)
library(chemometrics)
summary(df[,vars_con])
mout<-Moutlier(df[,c(3,5,8,11)],quantile = 0.995, plot = TRUE)
library(mvoutlier)
ll<-which(is.na(df$price))
if (length( ll ) > 0 ) df<-df[-ll,]
vars_con<-names(df)[c(3,5,7,8, 11)]
mout<-aq.plot(df[,vars_con],delta=qchisq(0.995,5),quan=0.995)
library(chemometrics)
mout<-Moutlier(df[,c(3,5,8,11)],quantile = 0.995, plot = TRUE)
mout<-Moutlier(df[,c(3,5,8)],quantile = 0.995, plot = TRUE)
