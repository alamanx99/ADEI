num_min = 9.6
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
1-pnorm(capacidadDVD,E_new,o_new)
prob = 0.99
qnorm(prob,E_new,o_new)
prob
prob = 0.99
qnorm(prob,E_new,o_new)
prob = 0.95
num_videos = 42
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 41
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 38
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 39
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 35
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 47
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 56
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 50
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 51
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
num_videos = 49
E_new = E*num_videos*num_min
o_new = sqrt(V*num_videos)*num_min
pnorm(capacidadDVD,E_new,o_new)
install.packages("bigchess")
library(bigchess)
f <- system.file("Descargas", "part.pgn", package = "bigchess")
f <- system.file("\Users\Miquel\Downloads", "part.pgn", package = "bigchess")
f <- system.file("C:\Users\Miquel\Downloads", "part.pgn", package = "bigchess")
f <- system.file("/Users/Miquel/Downloads", "part.pgn", package = "bigchess")
f
f <- system.file("C:/Users/Miquel/Downloads", "part.pgn", package = "bigchess")
f
f <- system.file.path("C:/Users/Miquel/Downloads", "part.pgn", package = "bigchess")
f <- file.path("C:/Users/Miquel/Downloads", "part.pgn", package = "bigchess")
df <- read.pgn(f)
f <- file.path("C:/Users/Miquel/Downloads", "part.pgn")
df <- read.pgn(f)
df
analyze_game()
data <- c(163,93,128,90,87,135,151,110,110,87,123,98,87,106,148,98,108,117,130,90,133,89)
n = length(data)
mu = mean(data)
p1 = sum(data)/n
p2 = sd(data)/sqrt(n)
prob = 0.9
sigma = 20
z = qnorm(prob+(1-prob)/2)
p3_1= mu-z*sigma/sqrt(n)
p3_2 = mu+z*sigma/sqrt(n)
prob = 0.8
prob = 0.95
sigma = 20
amplada = 5
mu = mean(data)
IC_2 = mu+amplada/2
z = qnorm(prob+(1-prob)/2)
p5 = (z*sigma/(IC_2-mu))^2
mu = 59.5
sigma = 2.8
n = 1
prob1 = 80
prob2 = 0.85
prob1 = 0.8
prob = (prob1+prob2)/2
alfa = 1-prob
c(mu-qnorm(1-alfa/2)*sigma/sqrt(n),mu+qnorm(1-alfa/2)*sigma/sqrt(n))
n = 4
c(mu-qnorm(1-alfa/2)*sigma/sqrt(n),mu+qnorm(1-alfa/2)*sigma/sqrt(n))
n = 11
c(mu-qnorm(1-alfa/2)*sigma/sqrt(n),mu+qnorm(1-alfa/2)*sigma/sqrt(n))
k1 = 58.7522
k2 = 60.2478
prob = 0.875
alfa = 1-prob
n1 = (qnorm(1-alfa/2)*sigma/(mu-k1))^2
n2 = (qnorm(1-alfa/2)*sigma/(k2-mu))^2
mu = 40
dades<-c(38.6,43.9,33.4,37.9,33.4,36.7,45.9,36)
n = length(dades)
mean(dades)
Z = (mean(dades)-mu)/(sd(dades)/sqrt(length(dades)))
1-pt(Z,n-1)
pt(Z,n-1)
prob = 0.99
t.test(dades,conf.level=prob)
sd(dades)
prob = 0.99
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
gradosT = 20
gradosS = 5
gradosR = 8
gradosQ = 53
gradosX = 7
gradosY = 5
gradosU = 68
1-pt(k,gradosT)
k = 3.85
1-pt(k,gradosT)
prob = 0.99
qt(prob,gradosS)
k = 3.833
2*(1-pt(k,gradosR))
prob = 1.65106
k = 14.067
pchisq(k,gradosX)
prob = 0.005
qchisq(1-prob,gradosY)
k1 = 60.24
k2 = 78.66
pchisq(k2,gradosU)-pchisq(k1,gradosU)
dades <-c(96,143,90,112,116,88,78,95,62)
mean(dades)
sum = c(90,105.5,109.5,95.5,85,94.5,96,87.5)
sd(sum)
i = 80
P4 = (mean(sum)-i)/(sd(sum)/sqrt(length(sum)))
P5 = (1-pt(P4,length(sum)-1))
conf = 0.98
C = 1-conf
L = length(sum)
S = sd(sum)
conf = 0.98
C = 1-conf
L = length(sum)
S = sd(sum)
M = sd(sum)
sd(sum)
sum = c(90,105.5,109.5,95.5,85,94.5,96,87.5)
conf = 0.98
C = 1-conf
L = length(sum)
S = sd(sum)
P81 = mean(sum)-qt(1-(C/2),L-1)*(S/sqrt(L))
P82 = mean(sum)+qt(1-(C/2),L-1)*(S/sqrt(L))
destp = 1142
amplitud = 348
P9 = mostres<-((2*))
prob = 0.99
amplada = 348
sigma = 1142
alfa = 1-prob
Z = qnorm(1-alfa/2)
n = (2*Z*sigma/amplada)^2
n = 270
k = 44
prob = 0.99
P = k/n
alfa = 1-prob
c(P-Z*sqrt(P*(1-P)/n),P+Z*sqrt(P*(1-P)/n))
Z = qnorm(1-alfa/2)
c(P-Z*sqrt(P*(1-P)/n),P+Z*sqrt(P*(1-P)/n))
prob = 0.95
ampl = 0.059
prop = 0.2
alfa = 1-prob
Z = qnorm(1-alfa/2)
ampl2 = ampl/2
P = prop
n_new = (P*(1-P))/(ampl2/Z)^2
n_new = 0.5^2/((ampl2/Z)^2)
ic = c(0.0556,0.0887)
prob = 0.80
amplada = ic[2]-ic[1]
ampl2 = amplada/2
P = ic[1]+ampl2
alfa = 1-prob
Z =qnorm(1-alfa/2)
n_new = P*(1-P)/((ampl2/Z)^2)
pi = 0.16
P = k/n
Z = (P-pi)/sqrt(pi*(1-pi)/n)
Z = abs(Z)
pnorm(-Z)+(1-pnorm(Z))
dades <- c(96,143,90,112,116,88,78,95,62)
n = length(dades)
mu_new = 0.93
Z = (mean(dades)-mu_new/sd(dades)/sqrt(n))
1-pt(Z,n-1)
Z = (mean(dades)-mu_new)/(sd(dades)/sqrt(n))
1-pt(Z,n-1)
s2 = sum(dades^2)-sum(dades)^2/n)/(n-1)
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
s3 = sqrt(s2)
s4 = s3*1/sqrt(n)
dades <- c(42,64,107,50,55,110,116,40)
n = length(dades)
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
s3 = sqrt(s2)
s4 = s3*1/sqrt(n)
mu_new = 94
Z = (mean(dades)-mu_new)/(sd(dades)/sqrt(n))
pnorm(Z)+(1-pnorm(-Z))
1-pt(Z,n-1)
pt(Z,n-1)
pt(Z,n-1)*2
prob = 0.99
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.90
alfa = 1-prob
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.95
alfa = 1-prob
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.97
alfa = 1-prob
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.98
alfa = 1-prob
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
dades <- c(46,41,149,123,144,136,122,131,101,67,67,94,123,115)
n = length(dades)
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
s3 = sqrt(s2)
s4 = s3*1/sqrt(n)
mu_new = 97
Z = (mean(dades)-mu_new)/(sd(dades)/sqrt(n))
1-pt(Z,n-1)
1-pt(Z,n-1)
prob = 0.95
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.90
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.80
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.85
alfa = 1-prob
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.99
alfa = 1-prob
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.98
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
dades <-(107,116,86,124,92,107,65,71,103)
dades <-c(107,116,86,124,92,107,65,71,103)
n = length(dades)
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
s3 = sqrt(s2)
s4 = s3*1/sqrt(n)
mu_new = 105
Z = (mean(dades)-mu_new)/(sd(dades)/sqrt(n))
pt(Z,n-1)
1-0.1252572
1-pt(Z,n-1)
prob = 0.9
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.95
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.85
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
dades <- c(130,56,100,63,75,105,76,55,141,68)
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
n = lentgh(dades)
n = length(dades)
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
s3 = sqrt(s2)
s4 = s3*1/sqrt(n)
mu_new = 108
Z = (mean(dades)-mu_new)/(sd(dades)/sqrt(n))
pt(Z,n-1)*2
prob = 0.80
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.90
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.99
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.95
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.85
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.83
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.82
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.79
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.75
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.77
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.78
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.90
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.93
prob = 0.99
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.95
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.96
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.97
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
prob = 0.98
alfa = 1-prob
s2 = (sum(dades^2)-sum(dades)^2/n)/(n-1)
c(s2*(n-1)/(qchisq(1-alfa/2,n-1)),s2*(n-1)/(qchisq(alfa/2,n-1)))
# setwd("C:/Users/lmontero/Dropbox/DOCENCIA/FIB-ADEI/PRACTICA/CarPrices/LABS")
install.packages(c("car", "FactoMineR", "knitr"))
library(car)
library(car)
library(FactoMineR)
library(knitr)
# setwd("C:/Users/lmontero/Dropbox/DOCENCIA/FIB-ADEI/PRACTICA/CarPrices/LABS")
install.packages(c("car", "FactoMineR", "knitr"))
library(car)
library(FactoMineR)
library(knitr)
install.packages("car")
install.packages("car")
install.packages("knitr")
install.packages("FactoMineR")
install.packages("car")
data(Davis)
attributes(Davis)
View(Davis)
# Numeric Univariant Description
summary(Davis)
data(Davis)
# install.packages("car")
library(car)
data(Davis)
attributes(Davis)
?prop.table
rm(list=ls())
library(AER)
library(car)
library(FactoMineR)
data("SwissLabor")
df<-SwissLabor
df$participation<-factor(df$participation,labels=paste("f.Par",sep="-",levels(df$participation)))
df$foreign<-factor(df$foreign,labels=paste("f.For",sep="-",levels(df$foreign)))
summary(df)
# Global association entre participation i la resta  de numèriques
oneway.test(df$income~df$participation)  # H0: mean income f.Par-Yes = mean income f.Par-NO pvalue=P(H0)= 2 e-7 << 0.05 -> H0 poc creïble -> H0 Rebutja - Income i Participation estan associades
prop.table(table(df$participation))
prop.table(table(df$foreign))
res.cat<-catdes(df,1)
str(res.cat)
res.cat$quanti.var  # Global association target is factor and explanatory variables numeric
res.cat$quanti # Especific association: target factor and numeric variables
data("SwissLabor")
df<-SwissLabor
df$participation<-factor(df$participation,labels=paste("f.Par",sep="-",levels(df$participation)))
df$foreign<-factor(df$foreign,labels=paste("f.For",sep="-",levels(df$foreign)))
# Global association entre participation i la resta  de numèriques
oneway.test(df$income~df$participation)  # H0: mean income f.Par-Yes = mean income f.Par-NO pvalue=P(H0)= 2 e-7 << 0.05 -> H0 poc creïble -> H0 Rebutja - Income i Participation estan associades
prop.table(table(df$participation))
prop.table(table(df$foreign))
res.cat<-catdes(df,1)
str(res.cat)
res.cat$quanti.var  # Global association target is factor and explanatory variables numeric
res.cat$quanti # Especific association: target factor and numeric variables
res.cat$test.chi2 # Global association target is factor and explanatory factors
res.cat$category
View(res.cat)
setwd("C:/Users/Miquel/Documents/GitHub/ADEI")
filepath<-"C:/Users/Miquel/Documents/GitHub/ADEI/"
# Clean workspace
rm(list=ls())
setwd("C:/Users/Miquel/Documents/GitHub/ADEI")
filepath<-"C:/Users/Miquel/Documents/GitHub/ADEI/"
load(paste0(filepath,"MyOldCars-Raw.RData"))
# Clean workspace
rm(list=ls())
setwd("C:/Users/Miquel/Documents/GitHub/ADEI")
filepath<-"C:/Users/Miquel/Documents/GitHub/ADEI/"
load(paste0(filepath,"MyOldCars-Raw.RData"))
summary(df$price)
Boxplot(df$price)
summary(df$price)
Boxplot(df$price)
summary(df)
names(df)
summary(df)
names(df)
summary(df$price)
Boxplot(df$price)
Boxplot(df$price)
boxplot(df$price)
names(df)
names(df)
```{r}
df$f.price<-factor(cut(df$price,breaks=c(quantile(df$price,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
df$f.price<-factor(cut(df$price,breaks=c(quantile(df$price,seq(0,1,0.25),na.rm=TRUE)),include.lowest = T ))
summary(df$f.price)
tapply(df$price,df$f.price,median)
levels(df$f.price)<-paste("f.price-",levels(df$f.price))
table(df$f.price,useNA="always")
df$f.price<-factor(cut(df$price/1000,breaks=c(0,15,20,26, 90),include.lowest = F ))
levels(df$f.price)<-paste("f.price-",levels(df$f.price))
table(df$f.price,useNA="always")
df$f.price<-factor(cut(df$price/1000,breaks=c(quantile(df$price,seq(0,1,0.25),na.rm=TRUE)/1000),include.lowest = T ))
mis1<-countNA(df)
mis1$mis_col
# Mout <- which((df$tax < var_out$mouti)|(df$tax > var_out$mouts))
# Some useful functions
calcQ <- function(x) {
s.x <- summary(x)
iqr<-s.x[5]-s.x[2]
list(souti=s.x[2]-3*iqr, mouti=s.x[2]-1.5*iqr, min=s.x[1], q1=s.x[2], q2=s.x[3],
q3=s.x[5], max=s.x[6], mouts=s.x[5]+1.5*iqr, souts=s.x[5]+3*iqr ) }
countNA <- function(x) {
mis_x <- NULL
for (j in 1:ncol(x)) {mis_x[j] <- sum(is.na(x[,j])) }
mis_x <- as.data.frame(mis_x)
rownames(mis_x) <- names(x)
mis_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {mis_i <- mis_i + as.numeric(is.na(x[,j])) }
list(mis_col=mis_x,mis_ind=mis_i) }
countX <- function(x,X) {
n_x <- NULL
for (j in 1:ncol(x)) {n_x[j] <- sum(x[,j]==X) }
n_x <- as.data.frame(n_x)
rownames(n_x) <- names(x)
nx_i <- rep(0,nrow(x))
for (j in 1:ncol(x)) {nx_i <- nx_i + as.numeric(x[,j]==X) }
list(nx_col=n_x,nx_ind=nx_i) }
mis1<-countNA(df)
mis1$mis_col
summary( mis1$mis_ind )
mis1<-countNA(df)
mis1$mis_col
mis1$mis_ind
quantile(df$price,seq(0,1,0.25),na.rm=TRUE)
quantile(df$price,seq(0,1,0.25),na.rm=TRUE)/1000
summary(df$mileage)
Boxplot(df$mileage)
?Boxplot
??Boxplot
mis1<-countNA(df)
mis1$mis_col
mis1$mis_ind
summary( mis1$mis_ind )
